app base forecasting crix index return use shiny master thesis submit prof dr wolfgang ardle prof dr brenda lo pez cabrera universita zu school business economics institute statistic econometrics gonzalo agustin garcia camargo partial fulfillment requirement degree master science statistic june would like thank prof dr wolfgang ha rdle constant source inspiration guidance support write thesis also many insight gain attend class would also like thank prof dr brenda lo pez cabrera support advice write thesis valuable lesson learn statistical tool finance insurance course finally would like thank family specially wife child unflinching support provide motivation try keep bettering thesis aim deliver model beat naive mean benchmark predict log return crix cryptocurrency index one day forecasting hori zon various model try test performance finally settle lstm model model able beat naive mean benchmark cross validation mean absolute error also perform well held data integrate result investigation web app base shiny facilitate usage train model observation history crix model use training test model ob june th app found http github com quantlet crixforecastapp ii content list abbreviation list vi list viii introduction model naive model mean model ets model lstm network rnns rnns vanish explode gradient problem lstms grus drop data implementation data iii crix component methodology app forecast page page result conclusion session info package iv list abbreviation gru gate recurrent unit rnn recurrent neural network lstm long short term memory ets error trend seasonality btc bitcoin eth ethereum bnb binance coin xrp ripple doge dogecoin usdt tether ada cardano dot polkadot ltc litecoin link chainlink cv cross validation usd united state dollar pow proof work po proof stake cc cryptocurrencies app application acf autocorrelation function crix cryptocurrency index ml machine learn mae mean absolute error dax deutscher aktienindex bptt backpropagation vcrix volatility index cc time pacf partial autocorrelation arima autoregressive move function integrate average list formula different ets model configuration hyndman rnn cell yu lstm cell yu lstm cell yu gru cell yu graph time price crix index usd st may graph price btc eth st may graph price bnb ada link ltc respectively st may graph price xrp dot doge usdt respectively st may time series cross validation observation use training blue red observation use validation horizontal line top represent consecutive training pass graph hyndman athanasopoulos autocorrelation partial autocorrelation plot log return series crix monthly decomposition log return series crix vi cross validation naive mean ets model forecast horizon step future vii list descriptive statistic crix price component usd st may symbol name start date data crix component cross validation result viii introduction st november group person alias satoshi nakamoto publish paper lay foundation trust less system electronic transac tions nakamoto paper explain bitcoin network born two month later rd january creation block first bitcoins btc blockchain com previous digital coin face issue prevent someone spending coin twice double spending without central authority moni tor transaction nakamoto solve double spending problem use decentralize network implement proof work pow render double spending impracticable easy achieve condition little coordination bitcoin one whole suite blockchain solution wide range application provide safe inflation blau make cloudstorage decentralization organizational structure government proof ownership etc buterin many solution cryptocurrencies associate example ether ethereum network bitcoin bitcoin network furthermore last decade cryptocurrencies take hold one world dynamic interest asset bitcoin reach value per coin market capitalization coinmar ketcap ethereum reach value market cap coinmarketcap capture attention cryp tographers geek also financial political elite world many world big technology company also look advantage cryptocurrencies offer example would diem previously call li bra association include company facebook spotify uber member diem whose purpose create global payment system financial infrastructure goal foster financial inclusion diem many heavy weight like mastercard paypal ebay report initially support agreement either left association ambiguous project refuse comment position highlight blockchain also controversial business insider attention blockchain technology receive positive kind government around world look regulate cryptocurrency space also get action concern crime sovereignty see european central bank european commission european central bank cheng moreover bitcoin network depends pow pow po proof stake hybrid scheme rely costly computation ensure good function network however lead massive energy consumption bitcoin network annual consumption compare small country badea mungiu pupa zan government move present united front climate change united nation energy consumption pow might provide bitcoin detractor argument luckily alternative consensus mechanism like po much small energy consumption pow scheme even though secure vranken therefore utmost importance cryptocurrency market gain size relevance disruptive potential become able well understand behavior market many effort make direction one example crix fromtrimbornandha rdle around many tool continue built example thevcrix kimetal andamethodology btc option pricing chen crix vcrix found http thecrix de paper attempt make try well comprehend forecast future behavior crix order lstm neural network train goal beating naive mean average baseline one day forecast log return crix index furthermore integrate web application order make accessible anyone application app base shiny well best deep learn library available program language suppose easy use comprehend found online http github com quantlet crixforecastapp paper organize follow section describes model use either baseline actually attempt good forecasting performance section describes data set well implementation web app section present result finally conclusion found section model naive model naive model base simple reason ask forecast much expense household go next month answer low complexity low cost money effort still reasonable would similar expense month ask euro amount might well name exact value expend month naive model short forecast variable period go value due simplicity naive model use benchmark measure performance forecasting model reason include among consider model mean model give deal log return series constantly grows rather one oscillates around zero assume series white noise expect value zero would good predictor series often big zero small know white noise might still quite difficult predict without use elaborate model try well solution naive one might come idea use mean past observation prediction value sure close individual prediction average close actual value series short mean model mathematically express follow ets model ets stand error trend seasonality framework exponential smooth method hyndman type trend seasonality find none additive multiplicative additionally additivedamped trend forexample theholt winter winter deterministic method additive trend multiplicative seasonality would ets model performs well short term forecast one attempt hyn dman result configuration write follow respectively level slope seasonal component series time parameter estimate finally determine configuration model use see formula different ets model configuration hyndman lstm network rnns recurrent neural network rnns consists hidden state output learn predict sequence learn distribution data sequence cho mathematical expression follow yu weight bias input recurrent information output time see graphical representation rnn unit theory rnns easy train use backpropagation time bptt werbos however training actually tends problematic vanish explode gradient problem expose next section stop basic form rnn become part mainstream machine learn tool set sutskever rnns vanish explode gradient problem illustrate goodfellow rnns use matrix time step update implies multiply wt number time step back propagation algorithm go let assume eigendecomposition follow vdiag vdiag tv rnn cell yu gradient get scale accord diag cause sufficiently small vanish sufficiently explode reason rnns problem learn relevant input output lie time step apart gers possible train deep feed forward network without affected vanish explode gradient problem sussillo rnns hand suffer vanish explode gradient problem try remember information past step lie many lag back hochreiter gradient responsible parameter update process tend distance final layer increase get close zero lead extremely long training time explode cause weight instability process give observation lie one time period past strong effect future outcome use network time series forecasting particularly problematic need ability save information past time network able finish training within reasonable time frame lstms lstm long short term memory network kind rnn call gate rnn due architecture particularly well fit solve time series pre diction task like one hand report lstms outperform traditional time series method like arima autoregressive integrate move av erage improve prediction accuracy average compare latter siami namini lstms solve vanish explode gradient problem use gate unit hochreiter schmidhuber particular integrate call input output gate architecture see lstm cell yu see working lstm cell also represent mathematical term follow yu ih ix tanh oh ox tanh weight cell state input output stand point wise multiplication vector red square sigmoid layer red rectangle tanh layer two layer within input gate firstly layer control information get secondly tanh layer computes new cell state output point wise multiply sum previous cell state update gate decide new information store cell state output gate hand control information finally output take account cell state within output gate control error flow output connection update cell state come input gate put tanh scale output sigmoid gate hochreiter schmidhuber explicitly reset cell state zero sequence cell state however often grow linearly reset cell eventually degenerate bptt unit sometimes previous knowledge typical lag size sequence start end gers realize solve inclusion forget gate depict input output gate remain unchanged forget gate learn decide information store cell decline utility lstm cell yu relevance proceed reset cell state gradual sudden manner gers refer lstm cell people usually make reference particular architecture turn mathematically express follow yu fh fx ih ix tanh oh ox tanh value forget gate one information kept contrary value zero get rid store information olah grus lstms outperform rnns time series prediction task also computationally expensive cho propose alternative lstm forget gate call gru gate recurrent unit propose architecture integrate forget input gate lstm cell call update gate see structure gru cell whose mathematical representation present next rh rx zh zx tanh reset gate update gate reset gate function follow zero previous cell state ignore new one reset use current input one opposite would happen input would completely ignore way hidden state able drop irrelevant information start become obvious future time step update gate hand decides previous cell state impact current one reset update gate independent cell capture correlation different time scale cho grus much representational power lstms however cheaper train still pretty good performance yu gru show outperform traditional rnns chung drop use complex model lstms grus machine learn small training set one present section always risk overfitting training data would lead model apparently performs well actually learn data set whole see test model held data set suddenly perform well gru cell yu one simple way avoid overfitting parameter model stack add unit layer strictly necessary time however know many layer unit per layer would adequate hinton propose alternative reduce overfitting call drop propose randomly drop hidden unit training case stop network rely set hidden unit work together thus prevent highly complex co adaptation would en learn model training data original drop paper introduce drop case deep feed forward neural network gal expand provide alternative also work rnns innovation consists apply drop mask training step pas data implementation data data use consists st may observation crix obtain http thecrix de first observation take th july new day another observation add series present day crix index st may component see price always usd see overview symbol crix crix cryptocurrency index base work do trimborn ha rdle graph evolution index since inception see construction adjust formula laspeyres use derive laspeyres index formula pl pl index level basket asset period respect base period price time give asset amount share case coin asset time base period goal index representative measure market laspeyres index allows compare much cost market basket price period differ cost market basket base period however problem deal change market composition index change price change structure change like new constituent becomes part old one drop graph time price crix index usd st may market monolithic fluctuate representative give market one point time might representative market another necessary index change market company go bust increase amount share new company gain importance well index able change kind development also way enables comparison pre post adjustment level many important equity index like example dax deutsche boerse ag use adjust laspeyres index escape problematic cryptocur rency space extremely new unconsolidated result coin gain lose importance short period time make adjust index laspeyres necessity mathematical representation follow crix divisor adjustment factor asset time point last time point divisor update tell deal th adjustment factor trimborn ha rdle divisor define divisor whenever structure market therefore component change divisor adjust order avoid non price related movement level index symbol min st qu median mean rd qu max sd crix btc eth bnb xrp doge usdt ada dot ltc link descriptive statistic crix price component usd st may component show evolution btc eth put together make around index weight accord http thecrix de st may see chart cryptos peak around end exception dot exist back usdt stable coin design always worth one dollar coherent cryptocurrency boom end follow crash market peak bnb link chart much less pronounce rest likely new cryptocurrencies time data couple month crash thofseptember forbnband thofnovember forlink seetable also observe small peak comparison cryptocurrencies doge possibly link status memecoin create joke abc also see incredible growth since october accordance symbol name start date crix cryptocurrency index btc bitcoin eth ethereum bnb binance coin xrp ripple doge dogecoin usdt tether ada cardano dot polkadot ltc litecoin link chainlink symbol name start date data crix component manyall time highswereachieved component crix last month overview descriptive statistic crix component see methodology goal predict crix price log return follow trans formation apply series ln ln log return day price crix day amount day two date consider case want daily log return infigure series found series seem stationary significative th lag acf st lag significative graph price btc eth st may furthermore decomposition monthly log return show seasonality trend series see seasonality oscillates range trend around negligible value monthly scale take account volatility asset behind series also see remainder comparatively big contrast seasonal trend component normal cross validation work time series model would de stroy temporal component forecast package us special cross validation time series described hyndman athanasopoulos time series cross validation consists take one observation validate performance model train previous observation give forecast horizon case one day future first observation series use val idation set use would imply training model observation graphically present training machine learn model batch sample create generator function avoid break temporal aspect series graph price bnb ada link ltc respectively st may graph price xrp dot doge usdt respectively st may time series cross validation observation use training blue red observation use validation horizontal line top represent consecutive training pass graph hyndman athanasopoulos model forecasting kera allaire chollet fore cast see hyndman hyndman khandakar package use data divide training test set cross validation mean ab solute error mae chosen measure model selection chosen model benchmark apply test set get sample mae code found http github com quantlet crixforecastapp app variety model time series take account app built use core team web interface shiny chang well dygraphs vanderkam use see full list package well setting use see reference kera package see chollet allaire forecast package see hyndman athanasopoulos open app see horizontal navigation bar top differ ent page within app accessible navigation bar page forecast analysis term use contact proceed describe function app individual page forecast page first forecast tab page resides functionality app tab select start left selection menu three basic field plot button first entity field accordance scope work restrict crix easy see try select input text nothing really change thesecondfield asitsnameindicates amount day forecast future default set one forecasting horizon main prediction model lstm configure train model however might helpful predict one period future order get longer forecast horizon help visualization possible input text field non integer number give digit comma ignore interpret possible input negative number case app default show plot evolution chosen entity without forecasting select model field drop menu allows choose model use prediction default set lstm model principal workhorse app naive mean benchmark well model also select select setting want use go ahead click plot button generate interactive graph log return crix last day black forecast value set blue autocorrelation partial autocorrelation plot log return series crix hover graph legend appear date point hover well value series date case confidence interval type band available also blue value point displayed legend point change size hover easily recognizable observation forecast legend refers get forecast value hover blue point vertical range point graph observation label th may denotes log return th may initial date th may final date range selector found axis use change date see also possible zoom range click drag desire date note time set change plot button clicked graph update additional field appear conditional model select particular select parametric model example ets second field parameter model displayed non modifiable field select model field plot button page analysis tab see interactive plot monthly decomposition well autocorrelation partial autocorrelation plot entity field show crix select give entity chosen nothing inputted field field label select analysis allows select monthly decomposition acf pacf displayed term use contact placeholder possible information regard app document none necessary function core feature erase replace need arises monthly decomposition log return series crix cross validation naive mean ets model forecast horizon step future result first infigure see ets model flexible enough best performance tends thatis simple alternative estimate really small small implies almost weight put observation come simplest ets model ets simple exponential smooth additive error also ets configuration best performance beating naive mean baseline search complex model justified result worth note maes calculate june th show model correspond mae first simple non recurrent machine learn model try ml baseline outperform naive model fail improve cross validation mae beyond mean benchmark three different specification gru try next simple gru model gru model recurrent drop model two gru layer stack however performance mean benchmark achieve lastly two lstm model specify lstm recurrent drop model consist two lstm layer stack recurrent drop apply see ml model able comfortably beat naive benchmark lstm recurrent drop able also beat mean benchmark model selection conclude lstm recurrent drop emerge victor however utmost importance training ml model capable flex ibility suspicious training result aware possibility overfitting first measure already integrate training process model achieve help validation set another step direction take look performance chosen model sample data purpose mind set observation exclude data use train ing serve test fortunately lstm recurrent drop mae test set confirm choice surprisingly model performs even well training set might indicate characteristic crix change time make later observation easy predict model may warrant investigation cause nature change model cross validation mae naive mean ets ml baseline gru gru recurrent drop gru stack lstm stack recurrent drop lstm recurrent drop cross validation result conclusion cryptocurrency market constant flux last year cryp tocurrencies become asset gain recognition adept time go must strive comprehend market importance associate risk grow shiny app result thesis serve display capability model start platform improve hopefully successful achieve goal lstm recurrent drop model present thesis already beat naive mean benchmark use time series input also performs well sample data potential expand include variable could impact crypto market fact model performs even well test set training set might indication something change series time would also worth investigation one promising alternative would integrate type sentiment analysis give passion sometimes craze cryptos provoke first month rather ethereal come measurement another path worthy study would look particular component see take atomic approach analysis well performance achieve sincere hope work contributes spur investigation cryptocurrencies market particularly working crix abc dogecoin elon musk saturday night live http www abc net au news dogecoin elon musk saturday night live access may th allaire chollet kera interface kera rpackageversion badea mungiu pupa zan economic environmental impact bitcoin ieee access pp blau griffith whitby inflation bitcoin descriptive time series analysis economics letter blockchain com block http www blockchain com btc block access june th business insider facebook key partner cryptocurrency li bra refuse publicly support http www businessinsider com libra association member refuse public support facebook cryptocurrency plan de ir access may th buterin ethereum whitepaper http ethereum org en whitepaper access may th chang cheng allaire xie mcpherson shiny web application framework package version chen ha rdle hou wang pricing cryptocur rency option case crix bitcoin ssrn electronic journal cheng lawson wong pre condition general purpose central bank digital currency http www federalreserve gov econres note fed note precondition general purpose central bank digital currency htm access april th cho van merrienboer gu lc ehre bougares schwenk bengio learn phrase representation use rnn encoder decoder statistical machine translation corr ab chollet allaire deep learn man publication chung gu lc ehre cho bengio empirical evaluation gate recurrent neural network sequence model corr ab coinmarketcap btc usd coinmarketcap http coinmarketcap com de currency bitcoin historical data access june th eth usd coinmarketcap http coinmarketcap com de currency ethereum historical data access june th deutsche boerse ag guide equity index deutsche boerse ag version diem diem white paper http www diem com en white paper cover letter access may th diem diem member http www diem com en association member access may th european central bank report digital euro http www ecb europa eu pub pdf report digital euro en pdf ac cessed april th european commission european central bank joint statement european commission european central bank cooperation digital euro http ec europa eu info site default file business economy euro banking finance document ec ecb joint statement digital euro en pdf access april th gal uncertainty deep learn ph thesis cam bridge gers schmidhuber cummins learn forget con tinual prediction lstm neural computation goodfellow bengio courville deep learn mit press http www deeplearningbook org hinton srivastava krizhevsky sutskever salakhutdinov improve neural network prevent co adaptation feature detector corr ab hochreiter untersuchungen zu dynamischen neuronalen netzen diplomarbeit technische universit mu nchen hochreiter schmidhuber long short term memory neural computation hyndman athanasopoulos forecasting principle prac tice melbourne australia otexts ed hyndman athanasopoulos bergmeir caceres chhay hara wild petropoulos razbash wang yasmeen forecast forecasting function time series linear model package version hyndman khandakar automatic time series forecasting forecast package journal statistical software hyndman koehler snyder grose state space framework automatic forecasting use exponential smooth method international journal forecasting kim trimborn ha rdle vcrix volatility index crypto currency ssrn electronic journal nakamoto bitcoin peer peer electronic cash system http bitcoin org bitcoin pdf access april th olah understand lstm network http colah github io post understand lstms access may th core team language environment statistical compute foundation statistical compute vienna austria version siami namini tavakoli siami namin comparison arima lstm forecasting time series th ieee international conference machine learn application icmla sussillo random walk training deep nonlinear feed forward network smart initialization corr ab sutskever marten hinton rent neural network proceeding th international conference inter national conference machine learn madison wi usa omnipress icml trimborn ha rdle crix index cryptocurrencies journal empirical finance united nation paris agreement http unfccc int site default file english paris agreement pdf access june th vanderkam allaire owen gromer thieurmel dygraphs interface dygraphs interactive time series chart library pack age version vranken sustainability bitcoin blockchains current opinion environmental sustainability werbos backpropagation time proceeding ieee winter forecasting sale exponentially weight move av erages management science yu si hu zhang review recurrent neural network lstm cell network architecture neural computation session info package version mingw locale lc collate german germany lc ctype german germany lc monetary german germany lc numeric lc time german germany run window build matrix product default base package base datasets graphic grdevices method stats utils package anomalize dplyr dygraphs forcats forecast ggplot htmltools kera lubridate plotly prophet purrr rcpp readr reshape rlang shiny shinyjs stringr tibble tibbletime tidyr tidyverse timetk xt zoo load via namespace attach assertthat backports base enc broom cellranger checkmate class cli codetools colorspace compiler crayon curl data dbi dbplyr digest ellipsis fansi fastmap fastmatch fracdiff furrr future generic globals glue gower grid gtable hm htmlwidgets httpuv httr install load ipred jsonlite later lattice lava lazyeval lifecycle listenv lmtest magrittr mass matrix mime modelr munsell nlme nnet packrat parallel parallelly pillar pkgconfig plyr prodlim promise quadprog quantmod readxl recipe reprex reticulate rpart rsample rsconnect rstudioapi rvest scale spline stringi survival tensorflow tfruns tidyselect timedate tool tseries ttr urca vctrs viridislite whisker withr xml xtable yaml zeallot declaration authorship hereby confirm author master thesis independently without use others indicate source passage literally general matter take publication source marked june gonzalo agustin garcia camargo