trading strategy bitcoin option base deviation risk neutral historical density master thesis submit prof dr wolfgang karl rdle prof dr brenda pez cabrera school business economics ladislaus von bortkiewicz chair statistic universit zu franziska sabine wehrmann partial fulfillment requirement degree master science statistic deviation risk neutral density rnd historical density hd use develop trading strategy risk neutral density estimate via rookley method solves second deriva tive option price strike price smooth imply volatility surface moneyness domain use local polynomial estimation thesis examines bitcoin btc option trade march september deribit estimate historical density garch model use fit behavior underlie base time series btcusd price binance ratio rnd hd call pricing kernel stochastic discount factor allows spot region option likely overprice use develop trading strategy additional theoretical description thesis also present intuition density pricing kernel furthermore highlight issue work real world data algorithmic bandwidth selection smooth imply volatility surface local polynomial estimation scope thesis two python package developed deployed pypi org package localpoly implementation local polynomial estimation estimate fit first second derivative point cloud procedure require bandwidth smooth kernel fit unknown optimize cross validation package spd trading summarizes estimation rnd hd return density pricing kernel buy sell interval list weight kernel local polynomial estimation bandwidth selection via minimization mse graphical representation step rookley method risk neutral density qq plot distribution innovation garch model historical density btcusd time series deribit binance development trading strategy development trading strategy evaluation trading strategy cash flow diagram cross validation local polynomial estimation slice random subset boxplot optimal bandwidth local polynomial estimation influence bandwidth result rookley method garch parameter density btcusd price varied strongly development trading strategy similar density list example input data calculation risk neutral density overview available option deribit expiry trading instruction skewness kurtosis trade cash flow type trading strategy symbol use formula cash flow expiration date ii content motivation theoretical background risk neutral density rookley method local polynomial estimation kernel choice bandwidth density transformation application method deribit option data historical density estimation garch variation parameter data btcusd index deribit trading deviation rnd hd trading strategy base shape distribution skewness trade kurtosis trade implement trading strategy evaluation discussion outlook list symbol equation rookley method bandwidth selection garch parameter cash flow expiration date example density trade iii motivation overall goal develop trading strategy base difference risk neutral density rnd derive option price historical density hd derive historical price underlie follow give intuition risk neutral density historical density connect via pricing kernel use develop trading strategy risk neutral density historical density pricing equation option underlie derive set financial market arbitrage opportunity exist measure describes market risk neutral measure also call martingale measure emphasizes origin artificially construct probability measure discount process underlie martingale another way think portfolio measure must absence arbitrage expect return equal risk free interest rate pricing equation discount expect return maturity risk free interest rate possible estimate risk neutral density rnd underlie time use set price option maturity however density confuse historical density hd estimate physical measure base historical behavior underlie would behave context simulation maturity usually call horizon pricing kernel conveniently risk neutral measure physical measure related pricing kernel also call stochastic discount factor let sample space outcome algebra every event simplicity write pricing kernel time outcome rnd hd pricing kernel often related term stochastic discount factor utility risk try give practical interpretation kernel thought stochastic discount factor risk neutral probability explain empirical probability event discount much event like disliked express stochastic factor kernel also see adjust real future outcome risk order arrive risk neutral probability finally see aggregate investor utility function since pricing kernel proportional marginal utility accord standard market model investor risk averse pricing kernel expect decrease however case rnd hd label pricing kernel puzzle trading strategy goal develop trading strategy exploit discrepancy risk neutral density historical density recall rnd represent current market expectation future whereas hd base historically observe price underlie pricing kernel rnd hd use spot area current option underpriced trade option accordingly mitigate risk trade hedge explain chapter data risk neutral density exchange offer option daily weekly monthly quarterly expiration example six option offer within region interest mean day six pricing kernel calculate one every maturity overall option trade examine late expiration date historical density approximation hd historical time series price underlie need use historical time series btcusd daily resolution binance theoretical background risk neutral measure set perfect financial market arbitrage free price option derive expect payoff maturity risk neutral measure expect payoff discount time interest via risk free interest rate one would get invest underlie directly te call risk neutral density rnd underlie derive price option maturity available time risk neutral measure also call martingale measure emphasizes origin artificial probability measure construct way discount process underlie martingale equivalent measure physical measure mean null set state different probability let sample space outcome algebra event physical measure empirical measure price option easily express way since discount price process martingale measure relationship radon nikodym lemma evolves general girsanov theorem state change possible let equivalent measure adapt process dq dp tobek dq physical measure finally price option express via physical density tk call historical density hd underlie time derive time series historical value underlie available time simulated horizon compare two representation value option show connection risk neutral density historical density refer radon nikodym derivative pricing kernel explains rnd hd connect allows develop trading strategy practical interpretation pricing kernel also call stochastic discount factor risk utility described chapter risk neutral density risk neutral density rnd derive price option maturity trade market time set option one day maturity consists option different strike price context option represent strike price option context density refers pricing kernel furthermore price underlie change throughout day well case bitcoin price deribit high change variable influence price option therefore imply volatility option specify tuple iv meaning price underlie strike price moneyness imply volatility time maturity information sufficient use semi parametric approach estimate risk neutral density us result breeden litzenberger arrow debreu price replicate use butterfly spread european option result find risk neutral density discount second derivative option price strike price ert kt st rookley method rookley found analytical solution equation represent call price black scholes call option pricing formula calculate second derivative strike price ke rt log arguably black scholes model best model pricing bitcoin btc option since assumes underlie behaves like process therefore account heteroskedastic nature time series pricing mechanism us stochastic volatility correlate jump svcj model proven suitable pricing btc option comparison imply volatility option characteristic calculate option price via black scholes model show pricing via black scholes model far compare actual option price market important note case option btcusd spot price risk free interest rate well continuous dividend yield zero follow therefore continue formula already evaluate calculate second derivative black scholes call price strike price rather tedious therefore found another valuable characteristic rookley method order receive risk neutral density smooth option price domain imply volatility domain andcall subset option use option create fit additionally imply volatility plot moneyness whereas option price plot due two fact point cloud option represent imply volatility moneyness much dense put call subset option price strike price therefore fit especially derivative much smoother refer understand part fit imply volatility volatility smile first second derivative get introduce option provide imply volatility specific moneyness value derivative practice use local polynomial estimation estimate fit first two derivative explain next section local polynomial estimation rookley method function imply volatility well first second derivative moneyness use imply volatility specific value moneyness give option derivative however need determine analytically example via local polynomial estimation explain section section assume imply volatility real value function twice differentiable second degree taylor expansion imply volatility center around neighborhood give representation linear combination reformulate linear model solve weight least square regression set least square regression target observe value term regressors dimensional matrix data point approximate function imply volatility derivative found vector coefficient matrix notation order achieve estimation sensitive neighborhood kernel add least square minimization problem min ker unlike ordinary least square regression error covariance matrix identity matrix diagonal matrix kernel point detail follow subsection diag ker point interest want estimate fit data point minimization problem solve weight least square estimator wx comparison equation taylor expansion weight least square version local polynomial estimation show llocal polynomial estimation conveniently estimate fit imply volatility step estimate first second derivative well characteristic imply volatility found wls estimator kernel kernel minimization problem weight least square estimation ensures varieswithm common choice kernel regression nadaraya watson estimator see local weight average target variable becomes clear second representation equation gaussian kernel unit variance bandwidth use weight function estimator kh xi hi exp weight hi nadaraya watson estimator much point contributes estimation therefore hi weightsw hi fordiffer entvaluesm blue orange green bandwidth solid dot solid contribution weight observation esti mat value high less dense viceversa high weight well bottom project moneyness plot randomly direction give feel den sity point bandwidthweights show weight different value blue orange hi green considers neighborhood area density hi observation high kernel bandwidth capture many observation hence lot point contribute estimate orange high observation density individual weight low whereas area observation density low green blue kernel bandwidth capture observation neighborhood therefore observation high contribution estimate case mean weight one emphasizes idea nadaraya hi watson estimate local weight average target variable solid dash line different bandwidth gaussian kernel dot big bandwidth enlarges influential neighborhood around point solid estimation decrease effect individual weight observation point small bandwidth give weight narrow neighborhood choice bandwidth challenge local polynomial estimation find correct bandwidth data well smooth rookley method particularly interested smooth fit without additional roughness since also use first second derivative roughness intensifies derivation mathematically overfitting smooth bias variance tradeoff decomposition mean square error bias variance term mse bias var fit capture relevant information input target data bias high fit smooth underfitting variance high fit sensitive data overfitting find optimal bandwidth cross validation cv perform mse loss function show bandwidth selection fit imply volatility moneyness option trade time maturity optimal bandwidth depends highly dataset successful local polynomial estimation cross validation perform every fit boxplot bandwidth show descriptive statistic hand reasonable suppose value outside percentile derive faulty cv represent bandwidth creates best fit therefore value replace percentile value discussion chapter note bandwidth selection via cv cross validation dataset split multiple subset one subset test set left fit create training set result fit compare actual value test set usually left sample chosen randomly give insufficient result case density data point high order slice data show well result random sample slice width selection mean square er ror mse different bandwidth optimal bandwidth minimizes mse therefore find opti mal bias variance tradoff hence optimum fitting optimal bandwidth opt dot solid line rep resent coarse fine search grid explain fit volatility smile bandwidthmse introduces artificial low bound bandwidth since fit need close gap slice see discussion show different outcome either method optimal bandwidth final fit also explains exact procedure cross validation step implement order limit runtime case huge datasets choice bandwidth via cross validation modification thoroughly explain chapter evaluation show correct choice bandwidth automized processing real world data difficult example demonstrates extent different bandwidth local polynomial estimation influence outcome rookley method density transformation equation risk neutral density accord breeden litzenberger see equation formulate strike price domain interested result money ness domain follow show density transformation domain application method deribit option data calculation risk neutral density consists three step first estimate function derivative imply volatility use rookley method calculate risk neutral density strike price domain finally apply density transformation map rnd moneyness domain final workflow calculate risk neutral density specific maturity described pseudo code calculate risk neutral density dataset need filter trading day well maturity option explains maturity offer trading day furthermore neglect option well datasets less observation choice threshold explain later section algorithm calculation risk neutral density rnd data option parameter iv result risk neutral density moneyness domain date maturity filter dataset date maturity local polynomial estimation get function imply volatility derivative calculate rnd domain via rookley method st use density transformation get rnd domain end first ted function imply volatility derivative estimate local polynomial estimation see section middle plot show theseresults blue orange andgreen finally therndink domain determine rookley method see section right plot show rnd moneyness domain hence density transformation see section visualization computation rnd left option data use local polynomial estimation fit curve imply volatility middle left fit imply volatility derivative blue orange green necessary rookley method middle right rnd rookley method strike price domain right rnd rookley method moneyness domain density transformation domain rndrookleymethod risk neutral density option trade show expect widen distribution grow maturity clearly noticeable risk neutral density de maturity longer time maturity wider distribu tion rndhddifferenttau iv type deribit trade example input data calculation risk neutral density rnd sort trading time subset contains trade option note dataset interest lie estimation risk neutral density btcusd derive price option underlie estimation use almost com plete dataset option trade deribit option described tuple iv example input data rnd show follow remark data preparation highlight work real world data usually come question sole answer filter maturity consider option time maturity day low bound trading strategy construct knowledge evaluation day use next day trading require information density time invariant justified time delta small respect maturity upper bound bound chosen accord available option data last trading day deribit option btcusd time series estimation hd end half year later treat trading day equally also trading day prior september option maximum maturity day consider variation price underlie option strike price appear several data point price underlie therefore moneyness constantly change also option price imply volatility adapts change calculation mean huge change option point get fan line observation span remarkable range moneyness diagonal option group result rookely method would one option point stayed throughout day example instead group diagonally align option vary inside group would single point spot span diagonal depends volatility spot price throughout day see btcusd spot price drop one day remove duplicate since interested option trade price keep information drop duplicate iv store single trade happen day filter iv iv filter likely faulty value side api would irrigate smooth imply volatility space local polynomial estimation decrease robustness rnd algorithm furthermore density calculate datasets observation miss data data day miss due problem infrastructure therefore calculate rnd day create trading strategy next day also data miss trading day knowledge previous day apply plot evaluation trade show period data available miss deribit btc option offer daily weekly monthly quarterly maturity expire friday utc next day week month quarter example six option offer within region interest compare maturity expiration time daily friday utc tomorrow day tomorrow weekly friday week utc month last friday calendar month utc quarterly march june utc september december cycle overview available option deribit expiry historical density historical density hd derive time series historical return lie simple sufficient model garch model since account heteroscedas ticity time series define series log return log log value underlie time garch model log return express time vary variance parameter multiply random innovation random shock variance parameter weight combination previous variance previous return therefore call conditional variance since depends previous return garch model follow form offset conditional volatility much yesterday volatility shock contributes volatility today much yesterday volatility contributes volatility today strongly past volatility propagates model small value less today volatility depends yesterday value random innovation random shock influence log return well next conditional variance also current conditional variance compose previous conditional variance well previous return mean depend parameter model imply volatility cluster high big influence previous volatility current volatility source mcneil barone adesi engle williams provide good summary theory motivation garch model estimation garch model log return time series garch model consists two step first model fit mean parameter estimate via maximum likelihood estimation distribution innovation estimate via kernel density estimation second step setting use simulate new path accord garch formula common tradeoff garch model length time series use fit mathematically model would benefit data real world mean old data need use increase risk old data compare anymore current situation due structural change especially true relatively new product like bitcoin tradeoff use past day btcusd index trading day fitting window day use maximum likelihood estimation parameter window slide time estimation distribution innovation fitting model fit garch model use past day btcusd log return slide window size day end estimate parameter innovation algorithm fitting garch model time series follow algorithm garch fit model data log return time series btcusd daily resolution log log result parameter distribution innovation garch model calculate new window edge window start window end get parameter qmle slide window subsection use unconditional variance estimate start value conditional variance else use previous variance end calculate current conditional variance tx calculate innovation distribution tt store end use kernel density estimation estimate distribution first estimation previous conditional variance unknown unconditional variance use instead since see chapter unconditional variance show qq plot distribution random innovation begin end evaluation period fitting daily log return btcusd garch model qq plot distribution innovation garchqqpars parameter estimate via quasi maximum likelihood qml esti mation order calculate log likelihood function assumption distribution random innovation make implementation arch package python normally distribute innovation assume qq plot show appro priate choice model around case qml estimator true ml estimator progress distribution estimate distribution random innovation deviate gaussian distribution normal log likelihood function optimization algorithm exactly fit set data minimize imprecise log likelihood function result imprecisely estimate parameter tx another way analyze validity garch fit check estimate parameter development move window show covariance stationarity constraint require variance would affect forecast indefinite future igarch exponential filter garch model must also true simulate path underlie density hd simulate path use kernel density estimation get density simulated return algorithm simulate path accord garch model data fit garch characteristic parameter distribution innovation result path underlie interested overall return burnin period simulation horizon use unconditional variance start value calculate next conditional variance draw distribution calculate next log return end throw away simulation burnin period keep simulation horizon calculate return truncate daily return exp nt since know first conditional variance accord garch model unconditional variance use estimate start point order reduce bias introduce estimate advisable implement burn period length twice length simulation horizon mean first daily return simulation thrown second portion simulation horizon conditional variance keep mind conditional variance different every simulated path historical density btcusd different maturity show expect widen distribution noticeable grow maturity variation parameter show estimate parameter fitting garch model time series lead parameter vary noticeably fitting period therefore slight variation also implement use model simulation simulation path underlie parameter varied every path different set parameter variation random normal around mean estimate sample variance method quick solution implement variability deliver robust result historical density bt cusdon fordifferentma turities longer maturity wider distribution rndhddifferenttau data btcusd index deribit calculation index btcusd index deribit combination late price bitstamp gemini bitfinex bittrex itbit coinbase lmax digital kraken exchange might temporarily exclude administrator information index calculate exactly exchange currently use refer deribit website evaluation price calculation evaluation price see quote deribit website price use settlement delivery contract calculate time weight average deribit index last half hour expiration deribit index get calculate every second final delivery price average index price take last minute expiration deribit binance unfortunately historical time series evaluation price exist yet also deribit btcusd index available daily resolution since march weekly resolution binance offer historical time series daily resolution sufficient need show comparison deribit binance index show justified use binance index order model historical density evaluation price deribit option small deviation come fact deribit index mixture many index include binance especially deribit refers measurement utc whereas binance measure utc btcusd index comparison deribit red data source option data rnd btcusd spot price binance blue data source daily price hd show index since august zoom december april show granularity deribit data change red plot justifies even though calculate rnd deribitprices model estimate hd blue shade area highlight timespan option dataset density calculate dark maturity dataset last light btcusd trading deviation rnd hd result previous chapter pricing kernel calculate use determine trading strategy kernel quotient risk neutral density divide historical density therefore represent deviation future price distribution market rnd historical data hd see chapter rnd option overprice sell option hd option underpriced buy option general idea sell option overprice buy underpriced deviation shape distribution due difference skewness kurtosis trading strategy base feature therefore call skewness kurtosis trade explain next section example procedure conventional option dax cover respectively trading strategy base shape distribution shape distribution specify skewness kurtosis give overview trading strategy built property name relation strategy skew rnd skew hd buy otm call sell otm put skew rnd skew hd sell otm call buy otm put kurt rnd kurt hd buy otm call put sell atm call put kurt rnd kurt hd sell otm call put buy atm call put skewness kurtosis trading strategy base difference risk neutral density rnd historical density hd procedure building exact trading strategy explain subchapters important note important note density therefore kernel calculate evaluation day day trading day differentiation make full set option evaluation day use possible day already even though trading btc option market deribit possible partition evaluation trading period necessary continuity justified use knowledge option maturity evaluation day find trading strategy option maturity trading day finally option trade execute execution day term definition example maturity evaluation day estimate density kernel create trading strategy trading day use trading strategy previ trade ousdayandtoday soptionstoexecute trade execution day option expire trade day trading day skewness kurtosis trade read follow way evaluation day historical density blue risk neutral density red calculate result rnd option detail call option represent red put option blue plot middle show kernel rnd hd buy sell interval use construct trading strategy information evaluation day use trading day analyze whether option fall desire buy sell interval example trade need otm call fall buy interval red well otm put sell interval blue case one option fall interval option moneyness closest one chosen least risky choice kernel plot available option align moneyness plot line reference thicker dot option trade strategy plot right show payoff diagram trade without trading fee black solid line total payoff light blue red line individual payoff option sell bought respectively dot line price underlie trading day grey execution day black skewness trade skewness indicates asymmetry distribution distribution zero skewness symmetrical positive skewness bend distribution left negative skewness right depend skew rnd big small skew hd trade establish accord dataset however almost skew rnd skew hd trade appear rnd bend left big skewness hd density becomes high positive otm area therefore low atm negative otm area payoff positive big contribution call call option additionally merely buying call put option sell lead positive cash flow trading day push payoff diagram towards zero area around kurtosis trade kurtosis describes tail distribution gaussian distribution kurtosis big kurtosis heavier tail therefore use examine risk kurtosis large extreme value tail distribution likely lead riskier descision note application center middle part distribution cover even though tail directly evaluate concept kurtosis trade still applies due tail influence entire shape high kurtosis big tail far otm low middle part near otm high center atm top trade show kurt rnd kurt hd center middle part density plot therefore seem tail hd blue high tail rnd red would imply kurt hd kurt rnd endpoint middle part density af ter interpolation extreme moneyness value would cross tail rnd red great tail hd blue hence kurt rnd kurt hd skewness trade trade skew rnd skew hd left risk neutral density red line historical density blue line evaluation day option data represent dot red call blue put middle construction trading strategy trading day pricing kernel black line indicates whether option bought red interval sell blue interval trade one need otm call option buy interval otm put option sell interval available option plot line align moneyness right payoff diagram trade back solid line total payoff blue red line payoff individual option sell bought respectively dot line price underlie trading day grey execution day black tradingstrategy kurtosis trade top trade kurt rnd kurt hd bottom trade kurt rnd kurt hd left risk neutral density historical density evaluation day middle representation trading strategy explain caption right payoff diagram tradingstrategy mid april day corona crash market base risk neutral density near otm remarkably high historical density example see bottom suggests trade portfolio construct way positive payoff price underlie maturity deviate price trading day much big much small example trade show risk neutral density high historical density atm low near otm portfolio positive payoff similar see top implement trading strategy next algorithm explains implementation construction trading strategy remember density therefore pricing kernel buy sell interval calculate option maturity evaluation day trading day day whereby available option maturity reason validity trade feature explain begin previous section algorithm construction trading strategy data rnd hd evaluation day maturity result option go trade evaluation date maturity calculate kernel rnd hd find sell buy interval sell buy get available option trading date evaluation date maturity trade find option fall buy sell interval complete trading strategy end note option maturity big consider knowledge evaluation day use next day trading assume density change significantly time justified maturity much big one day evaluation performance trading strategy measure total payoff consists cash flow trading day expiration day option cash flow contains price option sell bought transaction fee option deribit maker taker fee underlie btc per option maximum option price underlie maximum since example deribit website option trade btc taker fee btc instead btc therefore btc expiration day cash flow payoff option put call reduce delivery fee charge underlie btc maximum value option underlie maximum since cash flow usd trading strategy date refers trading day top total payoff middle payoff trading day bottom payoff day expiration day shade area day option data available therefore trade could determine trading day available data day entire trading period trade establish total cash flow usd tradingcashflow cash flow overall discover trade show bottom cash flow trading day middle trade pay expiration day top total grey shade area day option data available therefore trading strategy could establish apply trading day available data day entire trading period trade establish total cash flow usd mention usd come trade expire btcusd spot price experienced unusual growth september startingfromabout usd current time high usd begin growth show full cash flow expiration date found show cash flow type trading strategy notice actually trade rnd big skewness hd profitable also fit development btcusd spot price trade profitable hedge similar timespan trading start march price fell usd overall upward trend thereon explains type count total payoff payoff sum cash flow usd type trading strategy hindsight strategy successful discussion outlook backtesting trading strategy show option period expiration date distribution base trading strategy successful need put perspective follow highlight point chosen model fit perfectly real world technical side calculation option price via risk neutral measure black scholes butthereal worldviolates least requirement assumption transaction cost trade impact market price trader rational full information efficient market furthermore black scholes formula assumes price underlie behave like process show svcj model well fit calculate btc option price violation rookley method base option price via black scholes formula exact connect influence social medium price development elon musk tweet tesla bought billion usd bitcoin announcement tesla plan accept payment price increase almost next two week announce mid may stop offer price fell one week difficult prove origin price change behavior event likely correlate outside influence one entity market absolute violation mathematical model mention even though garch model already account stochastic change volatility via one stochastic factor found sufficient model real world development underlie multiple stochastic factor another lack garch model sensitive whether yesterday volatility shock positive negative also reality underlie reacts differently positive negative shock negative shock volatility increase equally strong positive shock minor note implementation could improve local polynomial estimation estimation rnd sensitive bandwidth kernel different approach bandwidth selection reasonable method exclude outlier might lead robust result sometimes density extremely similar algorithm explain might still possible develop trading strategy example well approach would estimate confidence band pricing kernel build buy sell interval whole kernel confidence band small big one section discus btcusd index take binance even though use estimate hd price deribit naturally advisable use deribit index hd estimation well performance expect improve slightly list symbol show symbol use formula symbol explanation risk neutral density historical density variable time point maturity date expiration day simulation horizon time maturity spot price price underlie option strike price density pricing kernel moneyness price call option price option unspecified call put risk free interest rate cdf normal distribution point continuous dividend yield rnd imply volatility usually moneyness domain hd conditional volatility var imply volatility smile first second derivative filtration time point value option time log return underlie parameter garch model symbol use formula equation rookley method complete calculation rookley method second derivative black scholes price strike price ke rt log important note case call option btcusd risk free interest rate well continuous dividend yield zero follow therefore continue formula already evaluate dimensionality reduction suggests use rescale follow way note btc case since value dividend substitution black scholes formula rewrite log equation risk neutral density becomes solve partial derivative short equation unpacks long expression part list dc dm dm dc dd dd dm dm dm dd dm dm dm dd dd dm dm dm dd dm dd dm log log simpler notation use follow symbol imply volatility first second derivative practice estimate local polynomial estimation explain section notation continue derivative log dm log log dm log bandwidth selection cross validation mse asevaluation function perform first data split several subset run one subset left test set remain big set training set case advisable construct random split achieve similar distribution subset however lead problem case show left see fit imply volatility moneyness first step rookley method subset create randomly remain point still similar original left sample prevent overfitting becomes especially obvious example right density fit rookley result group point represent option different price underlie group dense prefers small bandwidth distance group much high asks big bandwidth subset create randomly group one two point left cv still find small bandwidth fit adapts step group whereas want fit centroid group idea create subset slice data direction ensures training set include value similar equal data test set target leakage important keep mind slice also creates artificial low bound bandwidth splitting moneyness area slice creates gap gaussian kernel equation optimal bandwidth small gap size since tail also contribute estimation whereas case kernel function without tail bandwidth need big enough function cover gap epanechnikov triangle kernel algorithm cross validation described notably include two measure deal big datasets limit runtime cross validation loop example dataset observation cv method left imply volatility moneyness local polynomial estimation use find volatility smile solid line show result subset cv create randomly random dot line subset slice data moneyness direction slice right rookley result risk neutral density local polynomial estimation use fit density function point subset create randomly optimal bandwidth small fit include step solid line random slice subset result desire smoother fit dot line slice blue dot example testset slice cv bandwidthsections first measure calculation loss function point test set test slice use entire slice exclude training set maximum est point estimate datasets observation limit est amount slice generally observation use loss function second search grid bandwidth selection generate two step first coarse grid generate around bandwidth silverman rule thumb sample size standard deviation interquartile range min silver cv use find optimal bandwidth coarse grid tmp second finer grid define around temporary optimal solution second cv determines final optimal bandwidth opt since shape loss function mse bias var know convex local minimum also global minimum two step search allows precise fast search parameter space total one cross validation therefore consists maximum local polynomial estimation bandwidth grid value per grid fold cv slice max test point per slice estimation since local polynomial estimation base matrix multiplication inversion runtime scale amount estimation also size matrix algorithm implement python use numpy even though numpy already pretty efficient runtime still becomes noticeable big metrices motivates reduce amount execution usable minimum max estimation est would limited observation would use loss function even big dataset point entire cv would scale estimation algorithm cross validation bandwidth selection data scatter datapoints result optimal bandwidth opt amount split est maximum amount point estimate split dataset subset calculate start bandwidth silverman rule thumb silver define coarse sequence bandwidth around silver bandwidth test slice subset training set dataset reduce test slice perform local polynomial estimation training set maximum est value test slice predict value via fit estimation calculate mse end calculate mase mse end tmp argmin mase define fine sequence bandwidth around tmp repeat bandwidth cv loop find opt actually local polynomial estimation use fit volatility smile fit first second derivative also fit density curve rookley result domain course fit require another cross validation bandwidth selection order calculate one risk neutral density local polynomial estimation use three time next section discus result bandwidth search validity bandwidth selection calculation risk neutral density local polynomial estimation use three time first fit volatility smile option data find first second derivative fit density function result rookley method strike price domain finally density function moneyness domain sometimes cross validation algorithm bandwidth selection fails find optimal bandwidth compare value descriptive statistic result allows judging whether select bandwidth might faulty replace reasonable value smile rnd rnd local polynomial estimation create calculation risk neutral density descriptive statistic hand reasonable suppose value width local polynomial estima tion bandwidth depends highly dataset hence need select individually every fit sometimes thecrossval idation bandwidth selection fails reasonable suppose val ues outside per centile faulty therefore bandwidthboxplot outside percentile likely faulty therefore replace percentile value definition substitution rule half result initial bandwidth selection go replace another approach would replace outlier outside mean standard deviation standard deviation high reach negative value bandwidth appropriate choice see box plot take percentile value bound bandwidth reasonable adaption show sufficient case evaluation explains correct choice bandwidth automized processing real thenextexampleshows local polynomial estimation influence outcome rookley method show influence adaption bandwidth final result top show initial choice bandwidth found bandwidth optimization via cross validation smile rnd rnd bottom bandwidth correct percentile smile rnd local polynomial estimation use find fit function also estimate derivative adjustment bandwidth noticeable impact result case volatility smile fit change little since derivative sensitive instantaneous rate change point function late second derivative green differ drastically strong variation certainly cause change shape rnd result rookley method middle right right next two step procedure local polynomial estimation use create fit data point adaption bandwidth lead smoother fit bandwidth small fit smooth include step similar right local polynomial estimation bandwidth smile rnd rnd different choice bandwidth left right fit imply volatility smile imply volatility blue first orange second green derivative fit rnd function rookley result strike price domain rnd moneyness domain rnd top initial choice bandwidth cv bandwidth selection bottom adapt bandwidth percentile value rndrookleymethod garch parameter garch model follow form offset conditional volatility much yesterday volatility shock contributes volatility today much yesterday volatility contributes volatility today strongly past volatility propagates model small value less today volatility depends yesterday value show estimate parameter lead towards red blue begin end examinated period option data remarkable shortly begin corona shock approximately double weight mean suddenly yesterday random volatility shock much weight today estimate volatility mainly decrease whole period mean yesterday volatility less weight today estimate fitting daily log return btcusd garch model estimate parameter move window lead red blue date day apart therefore last move window time series subset red estimation equal first move window blue estimation garchqqpars cash flow expiration date expiration date count total payoff payoff cash flow usd expiration date example density trade density left right day price underlie drop visible plot diagonal price would stayed one diagonal would reduce one point two come put blue point call red point rndhdgrid risk neutral density historical density extremely similar trading algorithm recognize case exclude building trading strategy tradingstrategy wehrmann localpoly http pypi org project localpoly apr wehrmann spd trading http pypi org project spd trading july hull option future derivative en ninth edition pearson boston cochrane asset pricing revise edition english princeton press princeton nj usa cuesdeanu jackwerth pricing kernel puzzle survey outlook en annals finance figlewski risk neutral density review en cox ross valuation option alternative stochastic process en journal financial economics barone adesi engle mancini garch option pricing model filter historical simulation en review financial study karr probability en springer text statistic springer new york new york ny girsanov transform certain class stochastic process absolutely continuous substitution measure en theory probability application huynh kervella zheng estimate state price density nonpara metric regression en apply quantitative finance springer heidelberg heidelberg pp breeden litzenberger price state contingent claim implicit option price en journal business rookley fully exploit information content intra day option quote application option pricing risk management hou wang chen hardle pricing cryptocurrency option case bitcoin crix en hardle nonparametric regression en nonparametric semiparametric model springer series statistic springer heidelberg heidelberg pp nadaraya estimate regression en theory probability applica tions watson smooth regression analysis en sankhy indian journal statistic series deribit deribit derivative introduction policy august en http www de ribit com page information introduction policy mcneil frey estimation tail related risk measure heteroscedastic financial time series extreme value approach en journal empirical finance campbell lo mackinlay nonlinearities financial data econometrics financial market princeton press princeton pp williams garch model phd thesis ruprecht karls universit heidel berg july chen hardle hou wang pricing cryptocurrency option case crix bitcoin en ssrn electronic journal ssrn deribit general en http www deribit com page doc general binance data http www cryptodatadownload com data binance sahalia wang yared option market correctly price prob ability movement underlie asset en journal econometrics blaskowitz schmidt trading deviation imply historical density en apply quantitative finance springer heidelberg heidelberg pp deribit fee en http www deribit com page information fee kovach tesla buy billion bitcoin plan accept payment en http www cnbc com tesla buy point billion bitcoin html feb molla elon musk tweet crypto price move en http www vox com code elon musk bitcoin dogecoin crypto price tesla may hardle okhrin wang uniform confidence band pricing kernel en journal financial econometrics silverman density estimation statistic data analysis monograph statistic apply probability chapman hall crc boca raton declaration autorship hereby confirm franziska sabine wehrmann author master thesis independently without use indicate source consult publish work others form idea equation text always explicitly attribute franziska wehrmann