represent functional data smooth function master thesis present jan ulbricht prof dr wolfgang ardle case center apply statistic economics institute statistic econometrics partial fulfillment requirement degree master science august declaration authorship use others indicate resource passage literally general matter take publication resource marked jan ulbricht august would like thank prof dr wolfgang ardle also second examiner prof dr bernd onz give possibility write thesis especially indebted michal benko excellent support time developed main concept implement functional data analy si xplore great number long fruitful discussion give rise lot new idea furthermore profound thank szymon borak support get dynamically link library run last least would like thank friend encouragement understand way study parent generous financial support content introduction functional data definition functional data roughness smoothness function observe functional data basis function approach implement functional data analysis xplore object functional data analysis xplore three step fda basis expansion basis expansion xplore fourier base polynomial base spline base piecewise polynomial function polynomial spline definition property spline derivative spline tensor spline xplore quantlet spline base use fdbasis object xplore content iv smooth method functional data penalize regression roughness penalty approach choose smooth parameter choose linear differential operator compute inner product analytic numerical solution quantlet inprod create fd object xplore localize basis function estimator regularize basis approach summary outlook list three step functional data analysis system quantlets fda five fourier base period ten polynomial base piecewise cubic polynomial thick thin interior breakpoint tive two continuity condition interior breakpoint continuous piecewise cubic polynomial continuous second derivative three continuity condition interior breakpoint st order spline nd order spline rd order spline th order spline spline order multiple interior knot first derivative third order spline second derivative third order spline bivariate tensor product spline bivariate tensor product spline list vi exampleofb dash solid dot canadian weather data list example differential operator base correspond parametric family source heckman ramsay chapter introduction thesis considers data functional observation real function often function discretely sample mean finite set distinct point correspond observe functional value must use estimate underlie function basis function approach reduces estimation function estimation finite linear combination know basis function since deal functional data analysis chapter give short introduction nature functional data representation basis function approach main principle implementation chapter implementation three important family basis function fourier basis polynomial basis spline basis main emphasis put latter chapter describes different smooth method estimate coefficient basis expansion chapter finally summarizes main important fact provide short outlook aspect functional data analysis implementation chapter functional data definition functional data increase number problem wide range field data observe univariate multivariate observation classical statistic function attributable underlie infinite dimensional process experimental economics instance investigates willingness pay de pending amount risk natural continuum stock option price finance often treat function time black scholes mula imply volatility display time dependent functional pattern across strike term structure see black scholes growth curve action time distribution learn curve evolve continuously time engineering quite common model continuous technical dynamic system eeg emg record medicine depict continuous process example share property functionals continuous variable often time sophisticated line sense monitoring equipment routinely use data collection many field make possible study data function do change kind underlie sample space formally give sample independent observation measurable mapping probability space set elementary event sigma algebra subset definition functional data probability measure define measurable sample space sigma algebra case multivariate data random matrix contain observation dimensional row vector one dimensional randomvariables andhisap dimensional euclidean space rp consists random function turn function space since function denote ith observation argument assume function observe finite interval denotes low upper bound respectively case interpret time random function call ith realization continuous stochastic process since mostly case refer stochastic process follow many case observation single function also ap plication function surface observe two three dimensional space imply volatility spatial data generally vector variable observe data curve im independent realization dimensional continuous stochastic process analyze sample random function natural consider curve single observation summarize function term mean function measure way variation function mean ram say dalzell introduce name functional data analysis fda analysis data kind lead follow definition definition functional data sample call func tional data ith observation real function hence point function space avoid confusion single functional datum mean single observe function call replication functional data turn random sample replication argument interpret time ith replication also refer ith realization underlie continuous stochastic process roughness smoothness function accord ramsay two line development deal functional data first expression traditional data analytic technology language functional analysis go back particular french school analyse de donn ee see monograph cailliez pag dauxois pousse introduction second line development statistical application spline function especially seesilverman andgreen silverman detail recent year increase number publication functional data analysis evolve among application various field science well theoretical essay ramsay silverman ramsay silverman also two textbook functional data analysis available many fda method adaption classical multivariate method principal component analysis pca linear model analysis variance analyze variation within function derivative use extensively furthermore related concept roughness smoothness function play crucial role concept introduce next section roughness smoothness function due insight ramsay smoothness process generate observation smoothness ensures information derivative function use reasonable way derivative also play important role scientific model often interest rapidly amount system responds rather actual level response furthermore described ramsay silverman especially natural science engineering derivative also need roughness smoothness function construct model data base differential equation many field useful feedback input output model developed control behavior system dmf dmf dtm tl furthermore sufficient define inner product real function space general definition see example simmons definition inner product real function space function define value satisfy property hax zi ahx zi hy zi hx yi hy xi hx xi hx xi iff one easy way quantify degree smoothness function use adjoin concept roughness follow leurgans moyeed silverman roughness measure rapidity variability function gen erated positive definite quadratic form define function square integrable mth derivative pen dmf dmg dt notation pen use concept roughness primarily need penalty term smooth technique see chapter detail obvious roughness inner product roughness smoothness function roughness particular function quantify set quadratic form give pen dmf dt allows measure closeness polynomial order see defi nition one special case roughness total curvature curvature function define square second derivative measure deviation linear function integrate argument respectively whole interval interest yield total curvature pen dt often need wider class measure deviation especially periodicity data exponential trend would deviation polynomial hand may locally least function ideally satisfy particular differential equation may wish penalize departure do use linear differential operator define follow definition linear differential operator ldo define lf df dm dmf coefficient may either constant function roughness give pen lf dt obvious special case ldos depend underlie ldo degree smoothness function derive numerical value accompany rough ness since roughness quadratic form degree smoothness also non observe functional data negative low roughness high smoothness function pen call hypersmooth concept smoothness essential chapter coefficient basis expansion estimate degree smoothness one compete factor smooth discretely observe functional data function besides square bias observe functional data although functional data analysis ith observation real function func tional data usually observe record discretely typically sample data contain number independent replication record replica tion might consist pair denotes argument observe functional value choice nonrestrictive argument value may vary record need equally space furthermore number observation differ record nevertheless argument lie range value interest mean noise let ini ini ini adequate model underlie relationship sample data true functional value assume unobservable error term diag theobserveddatay ini structural component simple interpretable otherwise interest low dimensional structure residual component view noise unwanted variation possibly data ready exploration separation possible observe several realization underlie stochastic process basis function approach first step discrete sample data must put functional form precisely smooth function since random noise include data appropriate class method smooth technique basis function approach represent functional data smooth function flexible method need track local curvature provide sufficient number derivative one approach main idea replace vector input transformation use linear model new space derive input feature see hastie tibshirani friedman someassumptions underlie stochastic process necessary follow space assume separable hilbert space measurable function first second order moment assume exist finite ex var ex ex ex order simplify notation assume definition real function property pn pn call positive definite kernel correspond space function call reproduce kernel hilbert space rkhs since posse reproduce property hk hk basis function approach denotes inner product induced obvious hk kernel hence every continuous stochastic process finite second order seee istr tescu discussion reproduce kernel concept rkhs use estimate ith realization continuous stochastic process finite set discrete observation ni equation suggests regression approach one possibility minimize penalize residual sum square min pen xi hk smooth parameter detail penalize regression give section wahba show solution even dimensional linear combination ik ik real value function whose value function know representer evaluation since itholdsthathk see hastie tibshirani friedman show converges quadratic mean uniformly see wahba proof assume least part variation ith replication account term hence ease notation write instead followinghastie tibshirani friedman thefunctions arereferred basis function since basis function dimensional subspace detail call partition principle see ramsay dalzell hence estimation use therefore call basis function approach basis function approach order ease notation follow vector matrix introduce introduce finite dimensional vector argument ini ini ini matrix ik basis function approach impose finite dimensional structure esti mation problem restrict choice span prescribed set basis function estimate ith realization continuous stochastic process reduces use suitable set simple structure basis function estimation unknown coefficient basis expansion ik scope functional data analysis basis use replica tions since adjust requirement one specific replication sufficiently make vector coefficient case multiple func tions basis expansion might also vary variable case simultaneously involve periodic non periodic variable advantage basis function approach nonlinearity local feature data easily absorbed basis function model still linear transformation also compute mth derivative hence evaluate sample functional observation computational effort reduce basis function calculate degree data smooth rather exactly reproduce interpolate determine number basis function see ramsay implement functional data analysis xplore several basis function approach present chapter estimate coefficient dealt chapter implement functional data analysis xplore since deal functional data analysis computationally inten sive suitable software necessary main problem arises fact mapping computer directly often store discrete array interactive statistical compute environment xplore matrix base language allows computation array eight dimension main advantage fda purpose xplore allows store functional map endpenvironment aswillbeil lustrate later furthermore xplore possibility include dynamically link library dlls allows fast computation complex algorithm use software store functional data analysis described next subsection object functional data analysis xplore identify one specific functional basis number type basis function parameter basis function range interest see ramsay fortunately xplore capacity define single compound variable contain several piece information vary type scalar vector string array etc list variable spirit object orient program class specification list pre specifies structure accord ramsay class specifies type give name piece information compound variable furthermore give type name compound object assign class implement functional data analysis xplore name list allows xplore interpreter know advance internal element object specific variable create conform specification specific class inthe functionaldata context example functionaldata object call fd object simplest version conforms functional data class specifies object array number coefficient basis function expansion another object call fdbasis object specifies basis expansion described ramsay four different object need fda xplore fdbasis object specifies basis expansion fd object contains array coefficient basis expansion underlie fdbasis object deal ldos variable coefficient bifd object consists array coefficient two underlie fdbasis object arise naturally deal covariance cor depend two argument fdbasis object create quantlet createfdbasis list consist element type range nbasis params see section detail fd object create quantlet data fd list consist element coef underlie fdbasis object quant let data fd described section generate ldo object contains two part first user define ldo proc endp environment af terwards ldo object must create either use createldo quantlet directly use list concept follow example illustrates imple mentation ldo implement functional data analysis xplore proc wt ldo evalarg wt matrix row evalarg col evalarg wt evalarg wt evalarg endp ldo createldo ldo ldoexample xpl input parameter matrix argument value output parameter array first dimension coincides number summands ldo second third row column input parameter respectively note form must always held single summands ldo wt wt define compute inside environ ment afterwards ldo object create use quantlet createldo first input parameter string contain name proc endp environ ment ldo define second vector contain number derivative need single summands ldo output ldo object call ldo bifd object need specific transformation basis expansion case covariance theoretical point view could also underlie stochastic process depend one argu ment practice might difficult find another continuum observe additionally time therefore case sufficient deal several variable argument three step fda illustrates three typical step functional data analysis first step fd object create discrete input data accord step begin system basis function must specify contain different type information string indicate type basis implement functional data analysis xplore three step functional data analysis low upper bound interval interest vector contain two element number basis function integer array parameter specify basis store functional object call fdbasis create evaluate fdbasis object described section afterwards fdbasis object use estimate coefficient basis expansion smooth method functional data described chapter hence fd observation fdbasis object refers create evaluate fd object show section second step basic statistical graphical tool apply fd object cover function use display summarize functional data mean standard deviation variance covariance correlation also one initial step functional data analysis method call registration might place third step finally applies typical fda method fd object paper cover first step implement functional data analysis xplore system quantlets fda position respectively system architecture consists hierarchically order phase enables simple handle future extension general quantlets one stage must adjust example implement localize basis function estimation see section detail quantlets data fd evalfd fourth stage must adjust course already implement quantlets cover important case therefore remark hint future exten sion give follow chapter often possible computation basis function derivative well linear differ ential operator apply essential functional data analysis main important basis expansion computation present next chapter chapter basis expansion basis function chosen span include good approximation smooth function since represent underlie structure sample data must able flexibly exhibit require curvature need also nearly linear appropriate furthermore computa tional reason fast compute easy evaluate especially fda purpose must differentiable often require paper cover three common base fourier base polynomial base spline base fourier series know model periodic function also might useful periodic data fix know frequency dealt section polynomial easy compute also inflexible seem appropriate simple data structure without lot local feature polynomial introduce section spline often use class base non periodic data functional data context especially create appropriate smooth approximation underlie data favor extensive usage treat section finally section collect necessary information order compute fdbasis object xplore ramsay provide additional basis expansion exponential basis exp basis expansion xplore rate parameter power basis consist sequence possibly non integer power include negative power argument require positive another possible class basis function arises expand square integrable function term wavelet series discrete wavelet transform dwt fast orthogonal series expansion operates data vector whose length integer power two transform function space input space time domain basis function unit vector different domain see press introduction wavelet see ardle daubechies xplore already provide twave library deal wavelet nevertheless use wavelet base beyond scope paper user special base mind available far next section give overview general concept implement basis expansion xplore basis expansion xplore basis expansion xplore provide call evalgd quantlets contain specific computation algorithm certain class basis expansion currently exist evalgd quantlets fourierevalgd polyevalgd bsplineevalgd allow compute actual basis derivative example future purpose definite integral basis need necessary algorithm might also include quantlets evalgd quantlets compute derivative ldos quant let getbasismatrix next stage see need basis expansion xplore purpose idea behind decomposition include check whether quantlet instead several time evalgd quantlets reduces extension ex penditure furthermore additional operator check nonlinear differential operator may need future also include getbasismatrix quantlet evalgdquantlets neededtohave maybe different order argvals matrix argument value base evalu ated use matrix primarily necessary evaluate bifd object estimation basis expansion coefficient several replication observe different argument deriv vector non negative integer indicate order derivative compute possibility compute several derivative simultaneously especially necessary use ldos computation time reduce params additional parameter need identification specification purpose period use fourier base see section output array first dimension corresponds number row argvals second dimension corresponds number basis function third dimension corresponds number derivative compute fourth dimension corresponds number column argvals follow three section already implement evalgd quantlets theoretical background displayed fourier base fourier base phi fourierevalgd xvec nbasis period deriv evaluates fourier basis xvec trigonometric function widely use approximate periodic func tions know theory fourier series periodic function represent term finite infinite fourier series sin co sin co know frequency period usually coincides interval interest additive structure fourier series easily use basis expansion let even integer fourier base define sinr cosr coefficient basis function become orthonormal mean dt since derivative trigonometric function shift right mth derivative fourier base compute dm dm msin dm mcos fourier base quantlet fourierevalgd allows compute fourier base one derivative simultaneously matrix argument syntax phi fourierevalgd xvec nbasis period deriv input parameter xvec matrix argument fourier base evaluate nbasis scalar dimension functional basis period scalar period function deriv vector contain order derivative actual base compute quantlet return nbasis array one row contains evaluate base one argument one example actual fourier base period give five fourier base period fb xpl fourier series especially useful extremely stable function meaning function strong local feature curvature tends polynomial base order whole interval generally yield expansion uniformly smooth inappropriate degree data know suspect reflect discontinuity function low order derivative also exhibit local feature without use large number base see ramsay silverman polynomial base phi polyevalgd xvec nbasis deriv omega computes polynomial basis matrix functional behavior polynomial use approximate non periodic func tions accord notation de boor schumaker introduce follow definition definition polynomial polynomial order define tk tk kind definition moreover useful deal spline section slightly modify version use basis function expansion context th basis function described represent constant shift parameter help keep polyno mials get ill condition mth derivative dm polynomial base quantlet polyevalgd computes polynomial base one derivative simultaneously vector argument syntax phi polyevalgd xvec nbasis deriv omega input parameter xvec matrix argument polynomial base eval uated nbasis scalar indicate dimension functional basis deriv vector contain order derivative actual base compute omega optional scalar indicate shift parameter omega set zero quantlet return nbasis array one row contains evaluate base one argument one example actual polynomial base interval give ten polynomial base pb xpl spline base polynomial evaluate differentiate integrate easily finitely many step use basic arithmetic operation also unpleasant limitation increase order arise strong oscillation large interval furthermore sensitive choice interpolation point depend globally local property nevertheless polynomial seem well sufficiently small interval low order suggests order achieve class approximate function great flexibility interval interest subdivide small piece function might approximate locally define polyno spline finally spline dealt next section spline base spline widely use basis expansion fda context model sharp change underlie function well smooth variation band structure matrix value well fast computation favor extensive usage technically spline basis certain subspace space piecewise polynomial therefore wider scope theory necessary introduce concept piecewise polynomial function subsection follow definition polynomial spline subsection provide mathematical background spline main property dealt subsection since effort compute spline extensive subsection reserve piecewise polynomial function dividetheintervalj point point call breakpoints idea piecewise polynomial function state spline base follow definition definition letk beapositiveinteger poly nomial function order define tji def otherwise indicator function define set indicator function use make sure one piecewise polynomial define subinterval one convenient basis function representation tji two piecewise polynomial function agree consist polyno mial piece broken point collection piecewise polynomial functionsoforderk isdenotedbyp whichisclearly linear space dimension km main disadvantage definition piecewise polynomial func tions illustrate piecewise polynomial function need continuous even smooth interior breakpoints overcome impose constraint achieve continuous piecewise polynomial function equivalently dkp dkp spline base piecewise cubic polynomial thick thin pcp xpl order obtain continuous kth derivative therefore appropriate amount smoothness interior breakpoint word continuity condition derivative respectively illustrate different number continuity condition influence piecewise polynomial function let number continuity condition interior breakpoint store vector mean derivative dk continuous condition linear homogenous subset satisfy give vector linear subspace denote km pm continuity condition low dimension therefore also number necessary basis function unfortunately basis function longer appropriate basis expansion unnecessary coefficient solve linear equation system direct way case express term suitable basis spline base continuous piecewise cubic polynomial one continuity condition interior breakpoint pcp xpl continuous piecewise cubic polynomial continuous first deriva tive two continuity condition interior breakpoint pcp xpl spline base continuous piecewise cubic polynomial continuous second derivative three continuity condition interior breakpoint pcp xpl truncate power basis proposition truncate power basis otherwise def basis proof de boor global smoothness one certain class piecewise polynomial function call polynomial spline introduce polynomial spline globally smooth function concept continuity condition introduce spline base last subsection use indicate suitable subset lead follow definition definition let integer indicate order piecewise polynomi al give breakpoint sequence vector count number continuity condition interior breakpoint piecewise polynomial function call polynomial spline order spline minimize average square curvature consequently perform well interpolate polynomial furthermore every continuous function interval approximate arbitrary well polynomial spline order fix give sufficient number knot provide approximation power spline also hold simultaneous approximation derivative derivative spline piecewise polynomial structure allows easy fast computation spline derivative since polynomial spline special subset piecewise polynomial function also write term truncate power basis introduce sub section numerical application truncate power basis well suit example argument near upper bound interval necessary evaluate basis function compute entire sum reduce computational complexity basis local support would useful form certain linear combination truncate power function new basis whose element vanish outside small interval obtain show next subsection definition property spline originally basis divide difference arises newton form interpolation spline base pair argument value underlie function polynomial apply form etc coefficient uniquely determine pair argument function value let relation denote def schwarz show compute recursively use pairwise different integer structure term divide difference use discussion main property divide difference see de boor hence give definition normalize spline definition normalize spline nondecreasing sequence knot th normalize spline order define rule placeholder use indicate th divide difference function two variable take fix consider function alone see de boor equation thefactor spline base asserts spline form partition unity follow simplicity normalize spline refer spline spline fact basis space piecewise polynomial function proof see de boor schumaker curry schoenberg respectively dimension spline basis great dimension basis spline therefore additional knot include schumaker call extend partition extend partition sequence breakpoints additional initial final knot need actual value additional knot arbitrary also fda customary make equal respectively interior knot sequence must define breakpoint sequence desire amount smoothness interior breakpoint measure number continuity condition must translate consistent multiplicity knot follow relationship number knot word additional knot point spline function one less continuous derivative knot spline order knot breakpoint must discontinuous point show sequence spline order four equidistant knot partition extend appropriately illustrates ability spline respond different amount smoothness interior breakpoints use numerical computation problematic precision might lose computation various quotient need divide difference also special provision make case peated multiple knot calculation would amount evaluate spline base st order spline extend partition bspl xpl nd order spline extend partition bspl xpl spline base rd order spline extend partition bspl xpl th order spline extend partition bspl xpl spline base spline order knot sequence bspl xpl term truncate power basis would therefore beset precisely difficulty hop avoid introduce spline fortunately due de boor possible evaluate spline help recurrence relation require special arrangement case multiple knot suffer unnecessary loss precision proposition th normalize spline order nondecreasing knot sequence compute otherwise pm mk proof de boor spline compute two spline basis function degree hence recursively built basis function degree spline base numerically stable since convex combination nonnegative quantity involve furthermore since spline could also multiple knot care take use recurrence relation order avoid division zero induction one show hence accord term zero matter coefficient define spline compact local support lead band structure cross product matrix computation smooth value denotes order computational complexity local support non zero basis function degree whenusingkthorderb splineswithm knot truncate subintervals see subection basis expansion ith replication accordingtodeboor expansion isalsocalled spline spline function main advantage computation come local support property spline sufficient calculate spline order support derivative spline equivalently actual spline recurrence relation could also found com put mth derivative claimed follow proposition spline base proposition mth derivative kth order spline compute recursively dm dm dmb proof use get db hold use becomes db first derivative spline another spline one less order recursively apply technique one compute high order derivative since dmb dm illustrate db third order spline knot sequence respectively spline order piecewise polynomial function order hence obvious mth derivative must piecewise polynomial function order since recurrence relation structure furthermore spline order need derivative computation one algorithm might reasonable also spirit pro grambspline xplasdescribed section spline base db solidline anddb dottedline derivative piecewise polynomial function order bsplderiv xpl solid line dot line second order derivative piecewise constant function mean piecewise polynomial function order bsplderiv xpl spline base tensor spline case multivariate replication need generalization spline concept multidimensional case use tensor product approach one reasonable possibility many simple algebraic property ordinary one dimensional spline carry fortunately nature possible work usual one dimensional spline reader refer schumaker definition consider give dimensional nondecreasing knot sequence nj kj pm denote jl number subintervals order th dimension respectively tensor product spline define kj general property tensor product spline derive correspond property one dimensional spline see schumaker discussion illustrate bivariate tensor product spline equivalently basis expansion ith replication form xk xk inherit property local support nd sufficient compute xj xj forj necessary compute bifd object covariance spline base bivariate tensor product spline tensor xpl bivariate tensor product spline tensor xpl spline base xplore quantlet spline base phi bsplineevalgd tvec norder xvec deriv boolextend computes basis matrix spline give non decrease sequence knot tvec derivative simultaneously matrix argument bsplineevalgd us base dynamically link library bspline dll syntax quantlet phi bsplineevalgd tvec norder xvec deriv boolextend input parameter tvec vector strictly non decrease knot sequence knot sequence apply argument xvec norder integer indicates spline order cubic spline norder xvec default value tvec deriv vector integer contain order derivative compute deriv actual spline base calculate default value deriv boolextend boolextend tvec extend appropriately get mul tiple exterior knot default value boolextend quantlet return norder array one row contains evaluate base one argument automatic extension give knot sequence tvec suppress usingboolextend asinputparameter use directly furthermore quantlet able deal multiple interior use fdbasis object xplore knot mean restriction knot sequence must strictly non decrease compute tensor product spline knot sequence must ap ply dimension furthermore order derivative vary dimension nevertheless sufficient compute common bifd object covariance order get non singular basis matrix function derivative value argument equal upper exterior knot must set equal left side lime numerically do subtract small possible amount argument result basis function value absolute numerical error use fdbasis object xplore fdbasis createfdbasis type rangeval nbasis params creates fdbasis object basismat getbasismatrix evalarg fdbasis lfd computes basis matrix derivative apply ldos evalarg associate fdbasis object quantlet createfdbasis uniquely defines basis collect informa tion necessary compute basis quantlet syntax fdbasis createfdbasis type rangeval nbasis params input parameter type thismaybeoneof fourier bspline poly rangeval vector length contain low upper boundary range argument value nbasis number basis function use fdbasis object xplore params ifthebasisis fourier ifthebasisis bspline params strictly nondecreasing sequence knot basis poly params optionally obtain constant shift parameter quantlet creates functional data basis fdbasis object two step first recognizes type basis use several variant spell afterwards set functional data basis depend type technically fdbasis object list consist four input parame ters introduce quantlet createfdbasis help avoid complication furthermore offer possibility identify misspecifications early stage already implement basis type need list element elementarytypes basis params element require list case appropriate list may create createfdbasis call evaluate basis function derivative apply linear differen tial operator give vector respectively matrix argument quantlet getbasismatrix use syntax basismat getbasismatrix evalarg fdbasis lfd input parameter evalarg matrix value function evaluate fdbasis fdbasis object lfd thiscanbea obtain case ldo constant coefficient lfd must matrix thesecondone order derivative apply ldo variable coefficient lfd must ldo object use fdbasis object xplore quantlet return fdbasis nbasis array contain functional value lfd vector lfd matrix ldo object fdbasis nbasis element fdbasis object contains number basis function directly quantlet use rarely nevertheless frequently refer deal fd object quantlet getbasismatrix support four different lfd input type one single derivative vector derivative ldo constant coefficient ldo variable coefficient case lfd single integer case lfd vector integer case lfd matrix first column contains coefficient second order derivative case lfd ldo object mean list contain two element ldoname indicates name proc endp environment ldo define derivs vector order deriva tives need ldo ldo object also create quantlet createldo technical problem arise manifold nature lfd input parameter lfd matrix list respectively quantlet check implement algorithm purpose might worth mention first list create lfd input parameter matter whether already list create list number row vector contain dimension compute unequal one lfd matrix hence ldo constant coefficient one unequal size create list lfd must ldo object otherwise lfd vector contains order derivative base add link evalgd quantlet must add switch case environment getbasismatrix use fdbasis object xplore fdbasis object contain information type basis expansion coefficient left open yet estimate do described detail next chapter chapter smooth method functional data inchapter basis function rk vector coefficient must estimate help sample data relation coincides classical linear regression model obvious idea estimate coefficient minimize least square criterion obtain generalize least square gls estimator yield estimator covariance matrix vector error term unknown estimator must use turn procedure estimate generalize least square egls method discussion well estimate procedure unknown covariance matrix see judge unfortunately underlie function basis function therefore control smoothness penalize regression do choose appropriate basis expansion discrete way byspecifing one possibilityto overcome lack use roughness penalty approach introduce next section penalize regression roughness penalty approach roughness penalty approach extension generalize least square main idea come fact mean square error mse decom pose mse bias variance bias define sum square error note minimize mse often greatly reduce trading little bit bias lot samplingvariance acompletely unbiased estimate function produce curve fitting exactly newton interpolation see subsection curve must high variance manifest rapid local variation curve hence measure variance concept roughness introduce section idea roughness penalty approach penalize function would lead estimate rough function do determine coef ficients usual gls way introduce additional penalty term penalize least square criterion ith replication pensse pen smooth parameter measure rate exchange fit data variability estimate function symmetric weight matrix roughness pen use penalty term minimize respect lead estimate function classical roughness penalty approach us penalty operator penalize regression reason discuss section roughness function introduce might useful generalize concept reinsch show result function cubic spline knot data point use general ldo kimeldorf wahba show result function call spline see schumaker formal definition property spline illustrates impact different amount estimate function use spline basis expansion penalty operator tendstointerpolate underlie data roughness strongly penalize result tends hypersmooth mean tends linear function give penalty operator example spline expansion order dash solid dot canadian weather data rp xpl represent basis expansion ik penalize regression penalty term write pen dt dtc rc order symmetric matrix contains element dt hl kl compute matrix inner product show section use basis function expansion penalize least square criterion becomes pensse rc iftheerrorterms thenw becomestheinverse covariance matrix respectively estimate covariance matrix variance error term unknown also depend argument discuss section vector minimize data fitting vector smooth matrix map data fit show roughness penalty estimator structure similar gls estimator moreover provide natural flexible approach curve penalize regression estimation especially represent functional data finite basis expansion two parameter must estimate way start roughness penalty approach smooth parameter necessary linear differential oper choose smooth parameter green silverman parameter subjectively vary feature data arise different scale explore one parameter value look best might chosen second approach use automatic method choice cross validation especially functional data context large data set several replication use automatic method essential order get comparable result furthermore automatic choice case use start point subsequent subjective adjustment see silverman probably attractive class method choose smooth pa rameter cross validation main idea set aside subset data validation sample fit model rest data ass fit validation sample finally choose value give best fit important early reference use cross validation guide choice smooth parameter craven wahba functional case omit functional data one time various term cross validation score relate way whole function predict function data set idea leave whole data curve discuss rice silverman follow ramsay silverman let denote smooth sample mean calculate smooth parameter replication except measure global discrepancy compute integrate square error ise ise dt penalize regression see well predicts cross validation score cv com put sum integrate square error replication cv dt small value cv well performance measure cross validation score hence minimize respect give optimal smooth parameter since cross validation time consume tends often smooth data eubank introduces generalize cross validation crite rion value chosen minimize nsse gcv df df wheresse sse df df us estimate heckman ramsay define df tr number estimate parameter smooth matrix one show fix coefficient ldo tr decrease function range dimension kernel see heckman ramsay usually data denominator small df close thus minimize gcv mean fitting data well parameter see heckman ramsay choose linear differential operator introduce definition use linear differential operator ldo order variable coefficient must know practice usually general idea order coefficient penalize regression operator parametric family kernel exp co sin exp co sin exp du exp dv du example differential operator base correspond para metric family source heckman ramsay many model base upon scientific physical model consider favor model ldo summarizes example linear differential operator base correspond parametric family coefficient know must estimate data usu ally vector example deal periodic data may include unknown period parameter vector estimate use nonlinear least square technique minimize min additional weight factor heckman ramsay also dis cuss possibility minimize gcv criterion respect parameter vector however parametric model must way fit data otherwise would gain use associate penalty compute inner product compute inner product roughness penalty approach penalty term pen klx hlx lx must compute use basis function expansion penalty term write pen rc dt hl kl show hence critical part compute pen obvi ously calculation inner product matrix particular depends underlie basis function apply linear differential oper ator main analytic numerical algorithm present subsection accompany quantlet inprod introduce subsection analytic numerical solution linear differential operator constant coefficient possible product need two basis function family order derivative restrict present analytic solution case case use numerical algorithm might sufficient present romberg integration approach reason later subsection compute inner product fourier base follow proposition use ful proposition fourier base period rtu dm dm dt tl compute inner product rtu dm dm dt tl kw dm dm sin dm co proof hold direct verification leaf consider tu tu dt dt tl tl use relation sinaxsinbxdx cosaxcosbxdx follow tu sin sin dt tl tu co co dt tl sinaxcosbxdx follow tu sin co dt tl proposition get directly verifiable compute inner product compute inner product polynomial base next proposition use proposition polynomial base dm dm dt dm dm dm dm proof dm dm dt dm kdm ldt rtu mdt tl dm dm dm dm compute inner product spline base one special analytic case appear order derivative equal order spline minus one integral easy compute easy verify dk dk dt dk dk chosen arbitrarily since derivative constant interval product two constant function constant function function quantlet inprod see subsection chosen mean interval compute inner product spline base one approach spline write term piecewise polynomial hold wherec djb seedeboor fortheproof furthermore itisobvious dmb arise idea compute integral piecewise add ward main advantage underlie quantlets concept becomes clear possibility compute several derivative simultaneously much simpli fies computation time effort procedure calculation inner product spline base follow proposition need proposition two spline hold dmb dmb dt ijl dimensional quadratic matrix element ijl ijl dimension proof use integral becomes dt product sum integral write matrix notation ijl compute inner product ijl since integrand consists sum element ijl integrate original function element store ijl case numerical solution use provide romberg algo rithm andextendedwith aneville extrapolation follow press romberg algorithm procedure numerical integration gaussian quadrature fact superior romberg algorithm need transformation terval also computation eigenvalue eigenvectors see schwarz latter time consume deal high dimen sional matrix furthermore since often do numerical way additional loss precision almost unavoidable ease notation let def integration tu def dt tl integral function approximate sum area trapezoid step length mean distance two adjoint evaluation point romberg method us result successive refinement trapezoidal rule iteration do step length mth iteration follow relation show refinement new evaluation compute inner product point must add jh computational effort romberg method strongly lower use son defer approach limit perform numerical integration various value parameter extrapolate result continuum limit neville algorithm use extrapolate successive refine ments zero step size see press neville algorithm recursive way use give sequence point denotes ith argument ith function value estimate function value outside range sequence base relationship daughter two parent press suppose improvement keep track small difference parent daughter define value thus error indication hence help achieveda certain precision forease use allthese method include one quantlet call inprod compute inner product quantlet inprod inprodmat inprod fdo fdo lfd lfd jmax eps computes inner product function analytic numerical integration depend kind input parameter quantlet inprod follow input parameter fdo first fd fdbasis object fdo second fd fdbasis object lfd first evaluation object scalar vector order derivative matrix case ldo constant coefficient first column contains coefficient second one order derivative apply ldo variable coefficient lfd must ldo object default value lfd lfd second evaluation object see lfd default value lfd jmax maximum number iteration default value jmax eps fractional accuracy desire determine extrapolation error estimate default value quantlet inprod return nbasis nbasis array inner product nbasis nbasis number basis function fdo fdo respec tively give fdbasis nbasis element equal lfd lfd vector otherwise equal one note lfd vector also lfd must vector give maximum number iteration influence user jmax great computation time increase exponentially alternatively accuracy eps define user increase computation time kept mind compute inner product quantlet computes inner product analytically fdo fdo lfd lfd lfd ldo object spline polynomial fourier base range period case inner product compute numer ically use version romberg algorithm combination neville ex trapolation see subsection special case check whether lfd lfd matrix ldo object getbasismatrix quantlet must do fdo fdo fd object computation inner product separate two part correspond matrix inner product see equation compute afterwards multi ply coefficient vector scope hierarchical structure fda quantlets see must actually do evalfd quant let introduce section implement version lower computational effort since less quantlets must call hence use evalfd might necessary example coefficient localize section otherwise dynamically dependent argument follow spirit simultaneous computation inprod also compute value analytic inner product solution add do easily include name basis condition special case fdo fdo lfd lfd lfd ldo object hold otherwise include else condition case romberg integration create fd object xplore create fd object xplore fdobject data fd argvals fdbasis lfd lambda convert array function value plus array argvals argument value functional data object evalmat evalfd evalarg fd lfd evaluates fd object value ldo argument value evalarg fd object create use quantlet data fd quantlet us estimate coefficient basis expansion rule function observe discrete sample value may may equally space may well one function observe syntax quantlet fdobject data fd argvals fdbasis lfd lambda input parameter array observe functional value use compute func tional data object number observe value per replication number replication number variable argvals wherem orm respectively argument apply replication variable otherwise must hold replication apply certain vector argument basisfd fdbasis object lfd thiscanbeascalar derivative penalize ldo object ldo variable coefficient penalize apply ldo constant coefficient lfd matrix first column contains coefficient second one order derivative default value lfd create fd object xplore weight matrix default value identity matrix lambda parameter roughness penalty smooth lambda specify estimate data replication separately quantlet data fd return fd object contain nbasis array estimate coefficient underlie fdbasis object nbasis number basis function indicate fdbasis object note data fd require library multi us quantlet spur input parameter vector matrix three dimensional array respectively observation argument miss insert nan also case number observation vary replication algorithm filter nan input parameter argvals cannotcontainnans order handle nan functional value miss certain argument give arbitrary value argument algorithm filter pair value case take computation time nan include functional data input compiler need calculate coefficient replication separately lambda give compute tr trr use input parameter argvals necessary lambda compute individually replication lambda zero must give input parameter note number basis function great number observation single replication lambda estimate case even correspond input parameter set equal zero otherwise could use outer product basis matrix singular case quantlet evalfd use evaluate fd object vector matrix localize basis function estimator argument syntax evalmat evalfd evalarg fd lfd input parameter evalarg matrix argument value fd fd object lfd thiscanbeascalar ldo object ldo variable coefficient penalize apply ldo constant coefficient lfd matrix first column contains coefficient second one order derivative default value lfd quantlet return array functional value equal lfd vector equal one otherwise help two quantlets fd object create eval uated next two section special smooth method intro duced method would need specific quantlets implement yet therefore remark computational requirement also make localize basis function estimator idea combine kernel estimator basis function estimator yield localize basis function estimator kernel estimator give point linear combination local observation hj suitably define weight function hj hj pn ir localize basis function estimator forthenadaraya watsonestimator seenadaraya watson andk kernel function bandwidth confuse kernel function represent kernel introduce section overview kernel density estimation several kernel regression estimator give ardle becomes pensse rc diag hence vector parameter hni minimizes depends argument smooth matrix becomes design underlie kernel estimator weight value substantially positive support observation locate close evalua tion argument function estimate consequently essentially linear combination observation neighborhood one advantage approach basis well approximate local feature since approximate data limited neighborhood do small number basis function price pay flexibility expansion must essentially carry anew evaluation point see ramsay silverman localize basis function estimator might well suit thatiswhyithas implement yet xplore data fd quantlet must change also evalfd quantlet order able deal variable regularize basis approach coefficient basis function expansion furthermore quantlets need evaluate coefficient vector inprod regularize basis approach roughness penalty approach function force lie rela tively low dimensional space define term suitable basis section assume whole function span particular basis rather consider local basis expansion give point section two complementary base use fit function observe data assume function interest expand term two base ik matrix term basis function small number chosen ik give reasonable account large scale feature data example could polynomial base low degree complementary basis function generally much large number design catch local feature representable basis function assume roughness penalty must depend coefficient smooth enough otherwise would sufficient apply usual roughness penalty approach combine basis let define penalty term use linear differential ir ir operator pen lx dt dt ir ir ik express alternatively pen rc regularize basis approach order symmetric matrix contains element dt hl kl composite roughness penalty criterion becomes pensse rc heckman ramsay show furthermore solution general penalize regression problem without specify basis function expansion ramsay silverman show set partial derivative equal zero solution projection matrix complementary projection however result set linear equation extremely ill condition moreover matrix calculation require general calculation heckman ramsay provide algorithm chapter summary outlook thebasis function approach representation smooth function smooth technique estimation discretely observe data show main interactive statistical compute environment xplore provide creation computation functional data fd object offer start point functional data analysis next step method use display summarize functional data provide main advantage transformation variance covariance mean function apply directly coef element fd object result need many specialized function except quantlets compute correlation covariance function afterwards quantlets typical fda method principal component analysis pca principal differential analysis pda functional linear model developed additionally already implement smooth method extend happen smooth function require satisfy certain constraint thatthefunction strictly positive function strictly increase monotone function probability density function use standard force function constrain way ramsay proposes method constraint estimate smooth function strictly monotone ramsay silverman describe algorithm estimate probability density function use basis function expansion method computationally intensive iterative method nonlinear regression needtobeapplied asalreadymentioned another aspect extension exist system quantlets novel statistical technology functional data analysis already spark research system quantlets present thesis may support application functional data well give impulse future extension bibliography black scholes pricing option corporate liability journal political economy cailliez pag introduction analyse de donn ee paris soci de math ematiques appliqu ee de science humaines craven wahba smooth noisy data spline function numerische mathematik curry schoenberg olya frequency function iv fundamental spline function limit journal analys ee math ematique daubechies ten lecture wavelet siam philadelphia dauxois pousse le analysis factorielles en calcul de probabilit en statistique essai etude synth etique th ese etat universit paul sabatier de toulouse france de boor practical guide spline springer new york eubank spline smooth nonparametric regression marcel dekker new york green silverman nonparametric regression gener alized linear model roughness penalty approach chapmann hall london bibliography ardle kerkyacharian picard tsybakov wavelet approximation statistical application lecture note statistic springer verlag new york ardle mu ller sperlich werwatz nonparametric semiparametric model introduction springer new york hastie tibshirani friedman element statistical learn data mining inference prediction springer new york heckman ramsay penalize regression model base penalty canadian journal statistic istr tescu inner product structure theory application reidel publishing company dordrecht judge griffith hill lu tkepohl lee introduction theory practice econometrics john wiley son new york kimeldorf wahba correspondence bayesian esti mation stochastic process smooth spline annals mathematical statistic leurgans moyeed silverman canonical correla tion analysis data curve journal royal statistical society series nadaraya estimate regression theory probability application press teukolsky vetterling flannery nu merical recipe ndedition cam bridge bibliography ramsay data ara function psychometrika ramsay functional data analysis kotz read bank ed encyclopedia statistical science wiley new york ramsay journal royal statistical society series ramsay matlab plus function functional data analysis available ftp ego psych mcgill ca pub ramsay fdafuns ramsay dalzell tool functional data analysis journal royal statistical society series ramsay silverman functional data analysis springer new york ramsay silverman apply functional data analysis method case study springer new york reinsch smooth spline function numerische mathematik rice silverman estimate mean covariance structure nonparametrically data curve journal royal statistical society series schumaker spline function basic theory john wiley son new york schwarz numerische mathematik teubner stuttgart silverman aspect spline smooth approach non parametric regression curve fitting journal royal statistical soci ety series bibliography simmons introduction topology modern analysis mcgraw hill kogakusha tokyo wahba spline model observational data society industrial apply mathematics philadelphia watson smooth regression analysis sankhy series electronic source include cd rom contains quantlets described thesis well example tex file source fda quantlets contains fda quantlets described thesis bsplineevalgd xpl fourierevalgd xpl polyevalgd xpl createfdbasis xpl getbasismatrix xpl data fd xpl inprod xpl evalfd xpl createldo xpl example contains example quantlets use ldoexample xpl fb xpl pb xpl pcp xpl bspl xpl bspl xpl bibliography bspl xpl bspl xpl bspl xpl bsplderiv xpl bsplderiv xpl tensor xpl tensor xpl rp xpl contains file dynamically link library tex file note thepdf file web support version